<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
  <title>Reasonably Polymorphic</title>
  <link>https://reasonablypolymorphic.com</link>
  <atom:link href="https://reasonablypolymorphic.com/feed.rss" rel="self" type="application/rss+xml" />
  <description>Sandy Maguire's technical blog</description>
  <category>Programming</category>
  <copyright>2022 Sandy Maguire</copyright>
  <pubDate></pubDate>
  <language>en-us</language>
  <image>
      <url>https://reasonablypolymorphic.com/images/favicon.png</url>
    <title>Sandy Maguire</title>
    <link>https://reasonablypolymorphic.com</link>
  </image>
  <item>
      <title>Certainty by Construction Progress Report 10</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report10/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report10/index.html</guid>
      <pubDate>2023-10-12</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Thanks for all of your kind words of support after my last report. That’s the sort of thing that really helps keep me motivated. So thank you!</p>
<p>BUT GOOD NEWS. HERE’S SOMETHING ELSE THAT ALSO HELPS TO KEEP ME MOTIVATED.</p>
<p>I just wrapped up the last proof in the book!!!!</p>
<p>It’s taken me all week to put together these glorious 50 lines of Agda, but it makes for a damn fine finale for the book. So the game plan is now to delete that last chapter I’ve got hanging around that’s kinda about matrices, rewrite the prose on isomorphisms, and then do one final polish pass where I add things like indices and definitions.</p>
<p>Grad school has been much busier than I was expecting it to be, but no matter! I will persevere. Being so close to the finish line is tantalizing and I expect I’ll just spend the next few days powering through it all. This thing is definitely going to be finished by the end of the year.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 9</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report9/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report9/index.html</guid>
      <pubDate>2023-09-02</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>It is now the wee hours of Sept 2, and it’s safe to say I did not make the deadline. The book is not yet finished come hell or high water. Damn. Here’s the state of the world:</p>
<ul>
<li>Everything up to page 203/296 has been aggressively edited, in terms of prose, code, general presentation, and overall topic order. There are still a few TODOs to write chapter summaries, but those aren’t the end of the world if they don’t happen.</li>
<li>It’s now possible to build semi-readable epubs. Needing to run everything through the Agda compiler makes build pipelines surprisingly hard, but I think this should only require a couple of hours to get it into a good place.</li>
<li>I have commissioned a contest of potential covers for the book; no results yet, but I expect to to have some things to look at by the end of this week.</li>
<li>Since my last update, I realized I had accidentally lost the chapter on ring solving when doing my big refactor. I’ve since found it, but it’s no longer particularly motivated and is rather out of place, so I think it’s going to get cut. Kill your darlings and all that.</li>
</ul>
<p>All in all, I’m bummed I didn’t make the deadline, but the quality of the book is exponentially better, so I think it’s a worthwhile trade. I’ve got three/four chapters left to edit (depending on if ring solving gets cut), and I need to write a closing chapter to make the end less jarring.</p>
<p>On a personal note, although the book is much longer in content than my other books, it’s packed much tighter and thus is going to be <em>physically</em> smaller when I get it printed. For some reason that is holding a lot of space in my head right now, and steering me away from cutting too much. I suppose I shouldn’t fret too much; there’s still an index and glossary I need to add which will probably add a bit of length. Also I know this doesn’t matter, but I care about it nevertheless.</p>
<p>So why didn’t I get this done on time? The reason seems to be just that it was too ambitious a goal. I definitely underestimated the amount of polish required here. This month I put 65 hours of honest-to-goodness <em>work</em> into the book, which if you measure in terms of the 2.9h average hours of work that an officer worker does in a day is more than a full time job. It’s very late and I don’t know if that makes sense but I think it might.</p>
<p>Anyway, here’s the plan going forwards—I’ve got some of this week to work on the book before getting married and starting grad school. The goal is to just keep on at this pace for as long as I possibly can until I die or real life gets in the way. It sucks and I’m exhausted and would like to be finished with this thing, but it’s not done with <em>me</em> yet. And so we go on.</p>
<p>But maybe I’ll take tomorrow off because I need to sort out getting married, and I don’t think this kind of extreme focus is good for my mental health. It’s a bit of a balancing act though, because life is only going to get more busy after next week.</p>
<p>Sorry for the bleak trail off here. I should go to bed.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 8</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report8/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report8/index.html</guid>
      <pubDate>2023-08-23</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Eight days away from my deadline. How’s it going? Hectic.</p>
<p>I’ve been in a flurry of editing for the last two weeks. As of right now, I’m currently editing page 138/252. At this rate, it’s not looking promising, but I did just buy a flat of Red Bull, so you never know.</p>
<p>Besides editing, what’s new? Lots of minor typesetting stuff, like which paragraphs should be indented. I also did a pass through all the Agda modules with their new, final names, in easy searchable format. Along with that, the end of each chapter now has an explicit export list, which subsequent chapters import (rather than getting it from the stdlib.) This means you can see at a glance whether a chapter has prerequisites you need to read first! Minor stuff, but Nintendo polish nevertheless.</p>
<p>I had to rewrite a good chunk of chapter 2, and a lot of the prose in chapter 3 is from a very early edition of the book, and doesn’t have the shine as the rest of it. So that’s getting reworked too. My hope is that the later chapters were written more recently, and therefore will require less elbow grease. It’s plausible, and would be greatly appreciated. But I fear that the setoids chapter needs a lot of work, and I’m just trying my best to ignore it. For now.</p>
<p>In other news, I’m now uploading nightly builds to <a href="https://leanpub.com/certainty-by-construction">Leanpub</a> in order to keep myself honest. There’s no indication of which half of the book has been edited and which hasn’t, but that seems like a good idea I should adopt for the next build. That way particularly dedicated readers could follow along and see just how quickly I can get material cleaned up. And it will prevent me from accidentally forgetting where I was and re-editing it all again. Which has happened several times, somehow.</p>
<p>Okay that’s enough of an update. Back to the grind. Love y’all.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 7</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report7/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report7/index.html</guid>
      <pubDate>2023-08-12</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Where has this dingus Sandy been?? Busy busy busy! I’m in the middle of planning a wedding (my own), as well as just finished being the best man at my friend’s wedding. Plus getting the tax man’s records all sorted out for him, and a bunch of other things that fell into the “urgent” AND “important” categories.</p>
<p>Yeesh. Enough excuses though. I’m back and haven’t given up on any of this!</p>
<p>These days I’m calling the book “essentially done,” and all that is required is extensive editing. Which I’ve been doing. Every day on the bus I’m reading my PDF copy and making notes in the margin. Then I get home and go through the notes and clean up the prose.</p>
<p>It’s slow going, but that’s the way of the world. The prose is getting dramatically tightened up, however. It’s kind of fun to go through, be aware of the point I’m trying to make, and realize that I haven’t actually made it. I’m not calling this “rewriting,” but most paragraphs are changing dramatically.</p>
<p>Today I also sat down and hashed out a bunch of the technical pipeline issues I’ve been putting off for a year. Like getting section references working. So now instead of saying “as in <strong>sec:propeq?</strong>”, the prose now says “as in section 3.2”. The annotations have always been there, but getting the build to actually put in the text has taken away several hours of my life.</p>
<p>More excitingly, I also managed to get inline code snippets properly highlighted—and, even better, <em>broken code</em> now also highlights. This is a resounding achievement, because the whole idea of literate Agda is that it must compile. And the compiler is what generates the syntax highlighting. It’s a terrifying marvel of engineering, but it does work.</p>
<p>So that’s all. I’m just going to push on this book thing until it’s done. Or until September 1. Whichever comes sooner. That’s a terrifying thought, so I guess I’d better get back to it.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 6</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report6/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report6/index.html</guid>
      <pubDate>2023-07-14</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Aaaand we’re back. Traveling was nice, but it’s nicer to be home and being productive and making things.</p>
<p>This week I did a lot of work on the isomorphisms chapter. First and foremost, I proved that everything I knew about cardinalities from the Curry-Howard isomorphism held true. That is, that sum types add the cardinalities of their constituent types, product types multiply them, and by far the hardest to prove, that functions act as exponentials.</p>
<p>Going through the work of that taught me that I haven’t really internalized everything I ought to have regarding setoids, since I originally framed the problem wrong and needed Reed to help sort me out. There is some material in this chapter about building the relevant setoids for all of the necessary types, which sucks and would be better to avoid. I’m unsure if it will get moved out to the setoid chapter, or if I’ll just give a sketch in the final version, or maybe if it just gets left where it is.</p>
<p>For me, the motivating use case behind the algebra of types is to find different representations of things, ones with better computational properties. This turns out to be extremely easy to exploit in Haskell, but upon trying to write about it, I realized how much magic the Haskell runtime is doing in order to make that happen. It’s amazing that I’m still managing to trick myself into thinking I understand things, even after working on this book for nearly a year. But I suppose that’s the whole purpose!</p>
<p>So anyway, that section isn’t yet finished, but I think one more week will be enough to tie it together. And at that point, I’ve written everything I intend to, and will spend the remainder of my project time on editing, rewriting, cleaning up, and tackling the weird typesetting problems that remain. The end is nigh!</p>
<hr />
<p>That’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 5</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report5/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report5/index.html</guid>
      <pubDate>2023-06-20</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Reporting in a little early this week, since I’m going to be traveling for two weeks without my laptop starting tomorrow. That means the book isn’t going to get much work done on it until early July.</p>
<p>Nevertheless, I’ve been busy this week. I looked at a “real” book the other day, and was floored by how beautifully it was typeset. It inspired me to up my game and put a lot more energy into presentation. The results, in my opinion, are stunning. I redid the chapter headings. I changed the page headers. Painfully, I changed the margins too, which left the book 100 pages shorter than it used to be. Ouch! But what I’m most proud of is the new color scheme.</p>
<p>Let’s face it. The out-of-the-box color scheme for Agda is hard to love. It’s got ten seemingly-randomly-chosen colors, all smashed together. At first I tried a black and white color scheme, which looked great, but made the code hard to parse. So instead, I’ve settled on a trichomatic scheme based on the colors from <a href="https://c82.net/euclid/#books">Byrne’s Euclid</a>. It took a lot of tweaking to make everything work, but I’m really happy with how it’s turned out.</p>
<p>But presentation isn’t everything I did this week. No, I also rewrote everything I had on setoids, and have now motivated them by way of a section on monoids and their homomorphisms. This material is also a rewrite of the old janky monoid stuff, and it’s really come together. I’ve been trying to tie in a little more “and, as a programmer, why you should care” about some of these ideas.</p>
<p>Furthermore, there’s some rudimentary new material on finite numbers, characteristic functions and isomorphisms, with the eventual programming tie-in being automatic memoization of functions. This is a topic I thought I understood, but working through the formalization makes me realize I had fooled myself.</p>
<p>Anyway. I’m going to be gone for a few weeks, but I’ll pick right back up when I hit ground again. See you soon.</p>
<hr />
<p>That’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 4</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report4/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report4/index.html</guid>
      <pubDate>2023-06-16</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>I landed a two-week long gig three weeks ago, and that ate up my time for a little bit. But I’m back in action, significantly richer, and much more inspired to be working on Certainty by Construction again.</p>
<p>The end is finally in sight. This week I tore apart the modular arithmetic stuff from the material on setoids, realizing that the two were unrelated. I’d been having a lot of trouble getting that chapter sorted out, and it’s because it shouldn’t have been a chapter after all.</p>
<p>Instead, I’ve been working on merging the stuff about monoids and monoid homomorphisms into the setoid chapter, which is a much better motivation for setoids when you realize you can’t write many of the monoids you’d like to be able to. If I can fit lattices into there as well, I’ll be a very happy man.</p>
<p>Also this week I worked on some typesetting things. In particular, you’ll notice a gutter indicator on every code block telling you exactly where the code block should be indented relative to the file. This is a big improvement from before when you just had to guess, but I’m not yet <em>happy</em> with it. Please give it a read and let me know if you like the change, or what might be better.</p>
<p>Additionally I spent a <em>lot</em> of time making sure every code block had good vertical alignment of its code elements. That means all the equals signs should line up, and that the same argument is always in the same column, no matter how many patterns you’ve already matched. It’s not the sort of thing you’d notice, but it’s certainly the sort of thing whose <em>absence</em> you’d notice.</p>
<p>I’m committing to a hard deadline for this book of <em>September 1, 2023.</em> The thing is going to be finished and off to the printers by that day, because I want to have it done before I’m married, and that is coming up soon. And also, I work much better with a deadline.</p>
<hr />
<p>Anyway, that’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 3</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report3/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report3/index.html</guid>
      <pubDate>2023-05-25</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>Week three, and this update is coming in hot, a whole day early! This week I worked on the ring solving chapter, realizing that I can make a very much non-toy solver, and pack it into a chapter. We now build a multivariate semiring solver, discuss how and why it works, and then do some dependent-type shenanigans to put a delightful user interface in front of the whole thing.</p>
<p>In addition, it came with some excellent opportunities to discuss where semantics come from, and let me talk about homomorphisms earlier than I was otherwise hoping to.</p>
<p>My plan for the week was to tackle the remainder of the setoids chapter, but setoids are awful and it’s hard to motivate myself to do that, since I avoid using them in my day-to-day life whenever I can. Which is always. We’ll see what happens with this chapter, but maybe it’ll get melted down into something else. Nevertheless, understanding setoids <em>is</em> important for actually doing anything with the stdlib, so I dunno.</p>
<p>On the typesetting front, I spent an hour today fighting with Latex trying to ensure that it has glyphs for every unicode character in the book. I’ve got all but one of them sorted out now, and in the process, learned way more about Latex than any human should need to know.</p>
<p>The plan for next week is to cleanup the extremely WIP backmatter chapters. There’s a bunch of crap in there about me trying to do math math and failing, because math math doesn’t give two sniffs about constructability, and so none of it works out. If I’m feeling particularly plucky, I might try my hand at defining the reals, just because it might be fun.</p>
<p>As of today’s update, the book is now 360 pages long! I estimate it’ll be about 450 when it’s done, so we’re clearly making progress.</p>
<hr />
<p>Anyway, that’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 2</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report2/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report2/index.html</guid>
      <pubDate>2023-05-18</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>It’s week two of regular updates on Certainty by Construction, baby! This week I made 17 commits to the repository, half of which were towards the goal of improving the book’s typesetting. Spurred on by a bug report asking “what the hell does <code>AgdaCmd:MakeCase</code> mean?” I decided to upgrade the book’s build system. Now you should see explicit keystrokes to press when the book asks you to run a command alongside.</p>
<p>You’ll also notice intra-prose syntax highlighting, meaning that if the book mentions a type, it will now be presented in a beautiful blue, among other things in other colors. Agda has some janky support for this, but I couldn’t get it working, which means I annotated each and every piece of syntax highlighting by hand. Please file a bug if you notice I’ve missed any.</p>
<p>Content-wise, the old chapter on “structured sets” has become “relations”, and it has several new sections fleshing out the idea and giving several more examples. I’m now in the middle of rewriting the setoids chapter, but it too has three new sections, and thus the whole thing is no longer <em>all</em> about modular arithmetic.</p>
<p>Next week I’m going to continue powering on with the setoids chapter—including a big digression on what congruence entails under a setoid—and then I think I’ll tackle the ring solving chapter.</p>
<p>For the first time, this book seems like I might not be working on it for the rest of my life. It’s nowhere near done, but the topic and style are finally hashed out, and the content is mostly in an alpha state. From here it’s really just to continue grinding, rewriting all the crap bits over and over again, until they’re no longer crap.</p>
<hr />
<p>Anyway, that’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Certainty by Construction Progress Report 1</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>https://reasonablypolymorphic.com/blog/cbc-report1/index.html</link>
      <guid>https://reasonablypolymorphic.com/blog/cbc-report1/index.html</guid>
      <pubDate>2023-05-12</pubDate>
      <content:encoded><![CDATA[
        <p>The following is a progress report for <a href="https://leanpub.com/certainty-by-construction">Certainty by Construction</a>, a new book I’m writing on learning and effectively wielding Agda. Writing a book is a tedious and demoralizing process, so if this is the sort of thing you’re excited about, please do let me know!</p>
<hr />
<p>As part of a new ~quarterly goal, I’m going to be publishing updates to Certainty by Construction every Friday. This is for a few reasons: one, things get done much more quickly when you’re not doing them in private; two, relatedly, it’s good to get some exposure here and keep myself accountable.</p>
<p>Anyway, there are 26 new pages since last week, although a good deal of that is code without any prose around it yet. I’m in the process of cannibalizing the sections on relations and setoids into a single chapter. It’s a discussion of mathematical relations, their properties, an several examples. We explore different pre-orders, partial orders and total orders, and have a length digression about effectively designing indices for <code>data</code> types.</p>
<p>This last point arose from me spending a few hours trying to work out under which circumstances exactly Agda gets confused about whether or not a computing index will give rise to a constructor. My findings are that it’s not really about computing indices, so much as it is about Agda running out of variables in which it can pack constraints. I suspect this knowledge can be exploited to make more interesting constructors than I thought possible, but I haven’t worked out how to do it yet.</p>
<p>I’ve also been working on how to simplify some bigger setoid proofs, where you have a bunch of equational reasoning you’d like to do under congruence. The folklore on this is generally to introduce a lemma somewhere else, but this has always struck me as a disappointing solution. Modulo the concrete syntax, this seems to work pretty well:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode agda"><code class="sourceCode agda"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ot">_</span>≈nested<span class="ot">_</span>[<span class="ot">_</span>]<span class="ot">_</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="ot">:</span> A</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> <span class="ot">{</span>f <span class="ot">:</span> A <span class="ot">→</span> A<span class="ot">}</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> <span class="ot">(</span>cong <span class="ot">:</span> <span class="ot">{</span>x y <span class="ot">:</span> A<span class="ot">}</span> <span class="ot">→</span> x ≈ y <span class="ot">→</span> f x ≈ f y<span class="ot">)</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> <span class="ot">{</span>x y z <span class="ot">:</span> A<span class="ot">}</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> x IsRelatedTo y</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> f y IsRelatedTo z</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="ot">→</span> f x IsRelatedTo z</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="ot">_</span> ≈nested cong [ relTo x=y ] <span class="ot">(</span>relTo fy=z<span class="ot">)</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="ot">=</span> relTo <span class="ot">(</span>trans <span class="ot">(</span>cong x=y<span class="ot">)</span> fy=z<span class="ot">)</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="kw">infixr</span> <span class="dv">2</span> <span class="ot">_</span>≈nested<span class="ot">_</span>[<span class="ot">_</span>]<span class="ot">_</span></span></code></pre></div>
<p>which lets you focus in on a particular sub-expression, and use a new equational reasoning block to rewrite that, before popping your results back to the full expression. As an example:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode agda"><code class="sourceCode agda"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>  ⌊ <span class="ot">((</span>a *H c<span class="ot">)</span> *x+ 0#<span class="ot">)</span> +H b *S c +H d *S a ⌋ * x + b * d</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>≈nested <span class="ot">(</span>+-congʳ ∘ *-congʳ<span class="ot">)</span> [  <span class="co">-- focus on subexpr</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  ⌊ <span class="ot">((</span>a *H c<span class="ot">)</span> *x+ 0#<span class="ot">)</span> +H b *S c +H d *S a ⌋</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>≈⟨ +H-+-hom <span class="ot">(((</span>a *H c<span class="ot">)</span> *x+ 0#<span class="ot">)</span> +H b *S c<span class="ot">)</span> <span class="ot">(</span>d *S a<span class="ot">)</span> x ⟩</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  ⌊<span class="ot">((</span>a *H c<span class="ot">)</span> *x+ 0#<span class="ot">)</span> +H b *S c ⌋ + ⟦ d *S a ⌋</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>≈⟨ +-congʳ <span class="ot">(</span>+H-+-hom <span class="ot">((</span>a *H c<span class="ot">)</span> *x+ 0#<span class="ot">)</span> <span class="ot">(</span>b *S c<span class="ot">)</span> x<span class="ot">)</span> ⟩</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>  ⌊ a *H c ⌋ * x + 0# + ⌊ b *S c ⌋ + ⌊ d *S a ⌋</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>≈⟨ …via… *S-*-hom ⟩</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>  ⌊ a *H c ⌋ * x + <span class="ot">(</span>b * ⌊ c ⌋<span class="ot">)</span> + <span class="ot">(</span>d * ⌊ a ⌋<span class="ot">)</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>≈⟨ +-congʳ <span class="ot">(</span>+-congʳ <span class="ot">(</span>*-congʳ <span class="ot">(</span>*H-*-hom a c x<span class="ot">)))</span> ⟩</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>  ⌊ a ⌋ * ⌊ c ⌋ * x + b * ⌊ c ⌋ + d * ⌊ a ⌋</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>∎ ]                            <span class="co">-- pop back</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>  <span class="ot">(</span>⌊ a ⌋ * ⌊ c ⌋ * x + b * ⌊ c ⌋ + d * ⌊ a ⌋<span class="ot">)</span> * x + <span class="ot">(</span>b * d<span class="ot">)</span></span></code></pre></div>
<p>The attentive reader here will notice that I have also clearly been improving the chapter on ring solving. Maybe I’m just better at proofs these days, but the whole thing feels much less challenging than my first few times looking at it.</p>
<hr />
<p>Anyway, that’s all for today. If you’ve already bought the book, you can get the updates for free on <a href="https://leanpub.com/certainty-by-construction">Leanpub</a>. If you haven’t, might I suggest doing so? Your early support and feedback helps inspire me and ensure the book is as good as it can possibly be.</p>
      ]]></content:encoded>
  </item>
</channel>
</rss>
